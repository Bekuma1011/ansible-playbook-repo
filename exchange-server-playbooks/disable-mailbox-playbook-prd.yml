- hosts: all
  gather_facts: yes
  tasks:

    - name: Initialize success variable
      ansible.builtin.set_fact:
        task_succeeded_global: false
      run_once: true

    - name: Disable mailbox user on each host
      ansible.windows.win_powershell:
        script: |
          try {
              $SamAccountName = "{{ username }}"
              $EmailAddress = "{{ email }}"
              
              # Define remote username on exchange server
              $username = "{{ ansible_user }}"

              # Define remote user password
              $password = "{{ ansible_password }}" | ConvertTo-SecureString -AsPlainText -Force

              # Create user credential for remote powershell execution
              $UserCredential = New-Object System.Management.Automation.PSCredential($username, $password)

              # Create a session on one of the exchange servers
              $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri http://"{{ ansible_host_fqn }}"/PowerShell/ -Authentication Kerberos -Credential $UserCredential

              # Import powershell session
              Import-PSSession $Session -DisableNameChecking

              $User = Get-Mailbox -Identity $SamAccountName -ErrorAction SilentlyContinue
              
              if ($null -eq $User) {
                  $User = Get-Mailbox -Identity $EmailAddress -ErrorAction SilentlyContinue
              }

              # Execute Disable mailbox user cmdlet
              Disable-Mailbox -Identity $User.Alias -Confirm:$false

              # Remove remote session
              Remove-PSSession $Session

              # If execution was successful, return success message
              Write-Output "Mailbox for {{ username }} disabled successfully"
          }
          catch {
              # If there is an error, return the error message
              Write-Output "Error disabling mailbox for {{ username }}: $_"
              exit 1
          }
      become_method: runas
      become_user: Administrator
      register: result
      ignore_errors: true

    - name: Set success fact per host if the task was successful
      ansible.builtin.set_fact:
        task_succeeded: true
      when: result.error | length == 0

    - name: Collect success across all hosts
      ansible.builtin.set_fact:
        task_succeeded_global: true
      when: result.error | length == 0
      delegate_facts: true

    - name: Fail if task fails on all hosts
      fail:
        msg: "Task failed on all hosts"
      when: task_succeeded_global == false
      run_once: true
